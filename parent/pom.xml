<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Copyright (c) 2014-2015 Cisco Systems, Inc. and others.  All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 which accompanies this distribution,
 * and is available at http://www.eclipse.org/legal/epl-v10.html
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

  <parent>
      <groupId>org.opendaylight.odlparent</groupId>
      <artifactId>odlparent</artifactId>
      <version>2.0.6</version>
      <relativePath/>
  </parent>

    <groupId>org.opendaylight.snmp</groupId>
    <artifactId>snmp-parent</artifactId>
    <version>1.4.3-SNAPSHOT</version>
    <packaging>pom</packaging>

    <description>The SNMP Project of OpenDaylight addresses the need for a southbound plugin that allows applications and controller services to interact with devices using SNMP. The SNMP southbound plugin will allow applications acting as an SNMP Manager to interact with devices that support an SNMP agent.</description>
    <url>https://wiki.opendaylight.org/view/SNMP_Plugin:Main</url>
    <licenses>
        <license>
            <name>Eclipse Public License v1.0</name>
            <url>http://www.eclipse.org/legal/epl-v10.html</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>Adam Dierkens</name>
            <email>adierken@cisco.com</email>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:ssh://git.opendaylight.org:29418/snmp.git</connection>
        <developerConnection>scm:git:ssh://git.opendaylight.org:29418/snmp.git</developerConnection>
        <tag>HEAD</tag>
        <url>https://wiki.opendaylight.org/view/SNMP_Plugin:Main</url>
    </scm>

    <properties>
        <yangtools.version>1.2.3-SNAPSHOT</yangtools.version>
        <mdsal.version>1.6.3-SNAPSHOT</mdsal.version>
        <mdsal.java.binding.version>0.11.3-SNAPSHOT</mdsal.java.binding.version>
        <mdsal.model.version>1.6.3-SNAPSHOT</mdsal.model.version>
        <config.version>0.7.3-SNAPSHOT</config.version>
        <apache.servicemix.version>2.3.1_1</apache.servicemix.version>
        <snmp.impl.configfile>snmp-impl.xml</snmp.impl.configfile>
        <snmp.version>1.4.3-SNAPSHOT</snmp.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.opendaylight.snmp</groupId>
                <artifactId>snmp-artifacts</artifactId>
                <version>${snmp.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
             <dependency>
                <groupId>org.opendaylight.yangtools</groupId>
                <artifactId>yangtools-artifacts</artifactId>
                <version>${yangtools.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
              <groupId>org.opendaylight.mdsal</groupId>
              <artifactId>mdsal-artifacts</artifactId>
              <version>2.3.3-SNAPSHOT</version>
              <type>pom</type>
              <scope>import</scope>
            </dependency>
            <dependency>
              <groupId>org.opendaylight.mdsal.model</groupId>
              <artifactId>mdsal-model-artifacts</artifactId>
              <version>0.11.3-SNAPSHOT</version>
              <type>pom</type>
              <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.opendaylight.controller</groupId>
                <artifactId>mdsal-artifacts</artifactId>
                <version>${mdsal.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.opendaylight.controller</groupId>
                <artifactId>config-artifacts</artifactId>
                <version>${config.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.opendaylight.yangtools</groupId>
                    <artifactId>yang-maven-plugin</artifactId>
                    <version>${yangtools.version}</version>
                     <executions>
                        <execution>
                            <goals>
                                <goal>generate-sources</goal>
                            </goals>
                            <configuration>
                                <!-- directory containing yang files to parse and generate code -->
                                <yangFilesRootDir>src/main/yang</yangFilesRootDir>
                                <codeGenerators>
                                    <generator>
                                        <codeGeneratorClass>org.opendaylight.controller.config.yangjmxgenerator.plugin.JMXGenerator</codeGeneratorClass>
                                        <outputBaseDir>target/generated-sources/config</outputBaseDir>
                                        <additionalConfiguration>
                                            <namespaceToPackage1>urn:opendaylight:params:xml:ns:yang:controller==org.opendaylight.controller.config.yang</namespaceToPackage1>
                                        </additionalConfiguration>
                                    </generator>
                                    <generator>
                                        <codeGeneratorClass>
                                            org.opendaylight.mdsal.binding.maven.api.gen.plugin.CodeGeneratorImpl
                                        </codeGeneratorClass>
                                        <!-- directory into which generated files will be placed -->
                                        <outputBaseDir>target/generated-sources/sal</outputBaseDir>
                                    </generator>
                                </codeGenerators>
                                <!-- if true, plugin will search for yang files also in dependent projects -->
                                <inspectDependencies>true</inspectDependencies>
                            </configuration>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.opendaylight.mdsal</groupId>
                            <artifactId>maven-sal-api-gen-plugin</artifactId>
                            <version>${mdsal.java.binding.version}</version>
                            <type>jar</type>
                        </dependency>
                        <dependency>
                            <groupId>org.opendaylight.controller</groupId>
                            <artifactId>yang-jmx-generator-plugin</artifactId>
                            <version>${config.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <configuration>
                        <includes>
                            <include>org.opendaylight.snmp.*</include>
                        </includes>
                        <excludes>
                            <exclude>**/*HelpMojo.*</exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>pre-test</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>post-test</id>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <phase>test</phase>
                        </execution>
                    </executions>
                </plugin>
           </plugins>
        </pluginManagement>
    </build>
</project>
