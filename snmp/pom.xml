<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Copyright (c) 2014-2015 Cisco Systems, Inc. and others.  All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 which accompanies this distribution,
 * and is available at http://www.eclipse.org/legal/epl-v10.html
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.opendaylight.snmp</groupId>
        <artifactId>commons.parent</artifactId>
        <version>1.1.0-SNAPSHOT</version>
        <relativePath>../commons/parent</relativePath>
    </parent>
    <artifactId>snmp</artifactId>
    <packaging>bundle</packaging>
    <description>The SNMP Project of OpenDaylight addresses the need for a southbound plugin that allows applications and controller services to interact with devices using SNMP. The SNMP southbound plugin will allow applications acting as an SNMP Manager to interact with devices that support an SNMP agent.</description>
    <url>https://wiki.opendaylight.org/view/SNMP_Plugin:Main</url>
    <licenses>
        <license>
            <name>Eclipse Public License v1.0</name>
            <url>http://www.eclipse.org/legal/epl-v10.html</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>Adam Dierkens</name>
            <email>adierken@cisco.com</email>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:ssh://git.opendaylight.org:29418/snmp.git</connection>
        <developerConnection>scm:git:ssh://git.opendaylight.org:29418/snmp.git</developerConnection>
        <tag>HEAD</tag>
        <url>https://wiki.opendaylight.org/view/SNMP_Plugin:Main</url>
    </scm>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Import-Package>*</Import-Package>
                        <Export-Package>
                            org.opendaylight.snmp.plugin.internal,
                            org.opendaylight.yang.gen.v1.urn.opendaylight.snmp.rev140922,
                            org.opendaylight.yang.gen.v1.urn.opendaylight.snmp.rev140922.snmp.get.output
                        </Export-Package>
                    </instructions>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.opendaylight.yangtools</groupId>
                <artifactId>yang-maven-plugin</artifactId>
                <version>${yangtools.version}</version>
                <executions>
                    <execution>
                        <id>config</id>
                        <goals>
                            <goal>generate-sources</goal>
                        </goals>
                        <configuration>
                            <codeGenerators>
                                <generator>
                                    <codeGeneratorClass>org.opendaylight.controller.config.yangjmxgenerator.plugin.JMXGenerator</codeGeneratorClass>
                                    <outputBaseDir>${jmxGeneratorPath}</outputBaseDir>
                                    <additionalConfiguration>
                                        <namespaceToPackage1>urn:opendaylight:params:xml:ns:yang:controller==org.opendaylight.controller.config.yang</namespaceToPackage1>
                                    </additionalConfiguration>
                                </generator>
                                <generator>
                                    <codeGeneratorClass>org.opendaylight.yangtools.maven.sal.api.gen.plugin.CodeGeneratorImpl</codeGeneratorClass>
                                    <outputBaseDir>${salGeneratorPath}</outputBaseDir>
                                </generator>
                            </codeGenerators>
                            <inspectDependencies>true</inspectDependencies>
                        </configuration>
                    </execution>
                </executions>

                <dependencies>
                    <dependency>
                        <groupId>org.opendaylight.yangtools</groupId>
                        <artifactId>maven-sal-api-gen-plugin</artifactId>
                        <version>${yangtools.version}</version>
                        <type>jar</type>
                    </dependency>

                    <dependency>
                        <groupId>org.opendaylight.controller</groupId>
                        <artifactId>yang-jmx-generator-plugin</artifactId>
                        <version>${config.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

           <!-- put config files in m2 repo -->
           <plugin>
             <groupId>org.codehaus.mojo</groupId>
             <artifactId>build-helper-maven-plugin</artifactId>
             <version>1.9.1</version>
             <executions>
               <execution>
                 <id>attach-artifacts</id>
                 <goals>
                   <goal>attach-artifact</goal>
                 </goals>
                 <phase>package</phase>
                 <configuration>
                   <artifacts>
                     <!-- duplicate this section to create more config files using a unique classifier -->
                     <artifact>
                       <file>${project.build.directory}/classes/initial/${snmp.impl.configfile}</file>
                       <type>xml</type>
                       <classifier>config</classifier>
                     </artifact>
                   </artifacts>
                 </configuration>
               </execution>
             </executions>
           </plugin>

        </plugins>
    </build>
    <dependencies>
        <dependency>
          <groupId>org.opendaylight.controller</groupId>
          <artifactId>config-api</artifactId>
          <version>${config.version}</version>
        </dependency>

        <dependency>
          <groupId>org.opendaylight.controller</groupId>
          <artifactId>sal-binding-config</artifactId>
          <version>${mdsal.version}</version>
        </dependency>

        <dependency>
          <groupId>org.opendaylight.controller</groupId>
          <artifactId>sal-binding-api</artifactId>
          <version>${mdsal.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.servicemix.bundles</groupId>
            <artifactId>org.apache.servicemix.bundles.snmp4j</artifactId>
            <version>${apache.servicemix.version}</version>
        </dependency>

        <dependency>
            <groupId>org.opendaylight.snmp</groupId>
            <artifactId>mibs-model</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.yangtools</groupId>
            <artifactId>yang-binding</artifactId>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.yangtools</groupId>
            <artifactId>concepts</artifactId>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.yangtools</groupId>
            <artifactId>yang-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.yangtools.model</groupId>
            <artifactId>ietf-yang-types</artifactId>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.yangtools.model</groupId>
            <artifactId>ietf-inet-types</artifactId>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <scope>provided</scope>
        </dependency>

       <!-- Testing Dependencies -->
       <dependency>
           <groupId>junit</groupId>
           <artifactId>junit</artifactId>
           <scope>test</scope>
        </dependency>

       <dependency>
           <groupId>org.mockito</groupId>
           <artifactId>mockito-all</artifactId>
           <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
    </dependencies>
</project>
